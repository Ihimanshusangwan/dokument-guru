#!/bin/bash

echo "üöÄ Running Pre-Commit Hook..."

# Get the current branch name
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Check if there are merge conflicts
MERGE_CONFLICTS=$(git ls-files -u)

if [ "$CURRENT_BRANCH" == "test" ]; then
    if [ -n "$MERGE_CONFLICTS" ]; then
        echo "‚ö†Ô∏è Merge conflicts detected. You are allowed to commit only after resolving them manually."
    else
        echo "‚ùå Direct commits to the 'test' branch are not allowed unless resolving merge conflicts."
        exit 1
    fi
fi

# Run PHP-CS-Fixer only on changed files
if [ -d "backend" ]; then
    PHP_FILES=$(git diff --cached --name-only | grep -E '^backend/.*\.php$')

    if [ -n "$PHP_FILES" ]; then
        echo "‚ö° Running PHP-CS-Fixer on changed PHP files..."
        (cd backend && vendor/bin/php-cs-fixer fix --quiet)

        if [ $? -ne 0 ]; then
            echo "‚ùå PHP-CS-Fixer encountered an error."
            exit 1
        fi

        echo "‚úÖ PHP-CS-Fixer completed."
        git add $PHP_FILES # Re-add fixed files
    fi
fi

# Get list of changed files
FILTERED_FILES=$(git diff --cached --name-only)

# Run ESLint only on changed JS/TS files
JS_TS_FILES=$(echo "$FILTERED_FILES" | grep -E '\.(js|jsx|ts|tsx)$')

if [ -n "$JS_TS_FILES" ]; then
    echo "‚ö° Running ESLint on changed JavaScript/TypeScript files..."
    (cd frontend && npx eslint --fix $JS_TS_FILES --quiet)

    if [ $? -ne 0 ]; then
        echo "‚ùå ESLint failed to fix all issues."
        exit 1
    fi

    echo "‚úÖ ESLint completed."
    git add $JS_TS_FILES
fi

# Run TypeScript check only if changed TS files exist
TS_FILES=$(echo "$FILTERED_FILES" | grep -E '\.(ts|tsx)$')

if [ -n "$TS_FILES" ]; then
    echo "‚ö° Running TypeScript type check on changed files..."
    (cd frontend && npx tsc --noEmit --pretty --skipLibCheck)

    if [ $? -ne 0 ]; then
        echo "‚ùå TypeScript errors found. Please fix them before committing."
        exit 1
    fi

    echo "‚úÖ TypeScript type check completed."
fi

# Ensure deleted files are staged for commit
git add --all

echo "‚úÖ All checks passed! Proceeding with commit."
