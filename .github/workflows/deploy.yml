name: Deploy to Hosting

on:
  push:
    branches:
      - test
  pull_request:
    types:
      - closed
      - merged
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚡ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install Dependencies & Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: 📂 Copy Frontend Public to Backend Public Folder (Without Deleting Existing Files)
        run: |
          rsync -av --ignore-existing frontend/public/ backend/public/
          rsync -av --update frontend/public/ backend/public/

      - name: 🛠️ Setup PHP and Install Dependencies Locally
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer

      - name: 📦 Install PHP Dependencies
        run: |
          cd backend
          composer install --no-dev --optimize-autoloader

      - name: 🔑 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: 🔍 Set Deployment Path
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "DEPLOY_PATH=domains/dokumentguru.com/public_html/admin" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "DEPLOY_PATH=domains/dokumentguru.com/public_html/admin/test" >> $GITHUB_ENV
          else
            echo "❌ Unsupported branch, skipping deployment!" && exit 1
          fi

      - name: 🔍 Check if Deployment Folder Exists on Server
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "[[ -d $DEPLOY_PATH ]]" || { echo '❌ Target directory does not exist!'; exit 1; }

      - name: 📂 Deploy Backend (Including Vendor) to Server using SSH
        run: |
          rsync -avz --progress -e "ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa" backend/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:$DEPLOY_PATH

      - name: 🔄 Run Migrations and Seed Database
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd $DEPLOY_PATH
          php artisan migrate --seed --force
          EOF
